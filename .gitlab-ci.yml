variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  GIT_SUBMODULE_STRATEGY: normal
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

image:
  name: docker/compose
  entrypoint: ["/bin/sh", "-c"]

services:
  - docker:dind

cache:
  key: ${CI_JOB_NAME}
  paths:
    - .cache/pip

stages:
  - check
  - build
  - tag
  - package
  - publish

Version Check:
  stage: check
  image: python:3.12
  only:
    - branches
  except:
    - master
  before_script:
    - pip install poetry
    - poetry check
  script:
    - git fetch --tags
    - sed -i -e 's/\r$//' scripts/check_version_update.sh
    - scripts/check_version_update.sh

build-windows:
  stage: build
  except:
    - master
  script:
    - docker image prune -f
    - docker-compose -f docker-compose.build.yml build --no-cache
    - docker-compose -f docker-compose.build.yml up --exit-code-from app-windows
  after_script:
    - docker-compose -f docker-compose.build.yml down
  artifacts:
    paths:
      - ./dist/windows
    expire_in: 1 week

package-windows:
  stage: package
  only:
    - tags
  dependencies:
    - build-windows
  before_script:
    - ls ./dist/windows/
  script:
    - docker image prune -f
    - docker-compose -f docker-compose.dist.yml build --no-cache
    - docker-compose -f docker-compose.dist.yml up --exit-code-from dist-windows
  after_script:
    - docker-compose -f docker-compose.dist.yml down
  artifacts:
    paths:
      - ./dist/windows/Mixcloud\ Bulk\ Downloader.zip
    expire_in: 1 week

tag:
  stage: tag
  image: python:3.12
  only:
    - master
  except:
    - tags
    - merge_requests
  before_script:
    - git --version
  script:
    - git config user.email "${GITLAB_USER_EMAIL}"
    - git config user.name "${GITLAB_USER_NAME}"
    - echo ${CI_PROJECT_PATH}
    - git remote add api-origin https://oauth2:${GITLAB_ACCESS_TOKEN}@gitlab.com/${CI_PROJECT_PATH}.git
    - VERSION_NUMBER=$(grep pyproject.toml -e '(?<=^version = ")(.*)(?=")' -Po)
    - git push api-origin "${VERSION_NUMBER}"

publish:
  stage: publish
  only:
    - tags
  image: inetprocess/gitlab-release
  dependencies:
    - package-windows
  before_script:
    - VERSION_NUMBER=$(grep pyproject.toml -e '(?<=^version = ")(.*)(?=")' -Po)
    - echo ${CI_COMMIT_TAG}
  script:
    - mv ./dist/windows/Mixcloud\ Bulk\ Downloader.zip ./dist/windows/Mixcloud\ Bulk\ Downloader\ ${VERSION_NUMBER}.zip
    - ls ./dist/windows/
    - gitlab-release --message 'Automatic release' ./dist/windows/Mixcloud\ Bulk\ Downloader\ ${VERSION_NUMBER}.zip
